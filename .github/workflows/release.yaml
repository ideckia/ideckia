name: Release

on:
  workflow_dispatch:
    inputs:
      app_version:
        description: 'Ideckia version'
        required: true
      server_version:
        description: 'Server version'
        required: true

jobs:

  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.app_version }}
        release_name: Release ${{ github.event.inputs.app_version }}
        body_path: changelog.md
        draft: false
        prerelease: false

  create_actions_artifact:
    name: Create actions artifact
    runs-on: ubuntu-latest

    steps:

    - name: Create 'actions' folder
      run: |
        mkdir -p tmp/actions
    - uses: vimtor/action-zip@v1
      with:
        files: tmp
        dest: actions.zip
        
    - name: Upload actions
      uses: actions/upload-artifact@v2
      with:
        name: actions
        path: actions.zip

  get_actions:
    name: Get actions
    needs: create_actions_artifact
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        action: 
          - command
          - stopwatch
          - counter
          - obs-control
          - random-color
          - timezones
          - worklog
          - ftp-connect
          - ssh-connect
          - open-weather
          - clementine-control
          - mute-mic
          - toot
          - log-in
          - wait
          - countdown
          - keepassxc
          - emoji

    steps:

    - name: Create 'actions' folder
      run: |
        mkdir -p tmp
        
    - name: Download actions
      uses: actions/download-artifact@v2
      with:
        name: actions
        
    - name: Create folder
      run: |
        7z x actions.zip -otmp/

    - name: Get action
      uses: robinraju/release-downloader@v1.7
      with:
        repository: "ideckia/action_${{ matrix.action }}"
        latest: true
        fileName: ${{ matrix.action }}.zip
      
    - name: Extract files
      run: |
        7z x ${{ matrix.action }}.zip -otmp/actions

    - uses: vimtor/action-zip@v1
      with:
        files: tmp
        dest: actions.zip
        
    - name: Upload actions
      uses: actions/upload-artifact@v2
      with:
        name: actions
        path: actions.zip
        
  os_files:
    name: OS files
    needs: get_actions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: 
          - linux
          - win
          - macos

        include:
        - os: linux
          SERVER_FILE: ideckia-linux
          ARTIFACT: ideckia-linux

        - os: win
          SERVER_FILE: ideckia-win.exe
          ARTIFACT: ideckia-win

        - os: macos
          SERVER_FILE: ideckia-macos
          ARTIFACT: ideckia-macos

    steps:
    
    - uses: actions/checkout@v2
    
    - name: Download actions
      uses: actions/download-artifact@v2
      with:
        name: actions
    
    - name: Create folder
      run: |
        mkdir -p ${{ matrix.os }}
        7z x actions.zip -o${{ matrix.os }}
        mv app.props ${{ matrix.os }}
        mv icon_mini.png ${{ matrix.os }}/icon.png
        mv layout.json ${{ matrix.os }}

    - name: Get action_keyboard
      uses: robinraju/release-downloader@v1.7
      with:
        repository: "ideckia/action_keyboard"
        latest: true
        fileName: keyboard-${{ matrix.os }}.zip

    - name: Get action_keyboard
      uses: robinraju/release-downloader@v1.7
      with:
        repository: "ideckia/action_color-picker"
        latest: true
        fileName: color-picker-${{ matrix.os }}.zip

    - name: Get dialogs implementation
      uses: robinraju/release-downloader@v1.7
      with:
        repository: "ideckia/dialogs-clialogs"
        latest: true
        fileName: dialogs-${{ matrix.os }}.zip

    - name: Get MediaPlayer implementation
      uses: robinraju/release-downloader@v1.7
      with:
        repository: "ideckia/mediaplayer-rust"
        latest: true
        fileName: media-${{ matrix.os }}.zip

    - name: Get server
      uses: robinraju/release-downloader@v1.7
      with:
        repository: "ideckia/ideckia_server"
        latest: false
        tag: ${{ github.event.inputs.server_version }}
        fileName: ${{ matrix.SERVER_FILE }}

    - name: Move files
      run: |
        7z x keyboard-${{ matrix.os }}.zip -o${{ matrix.os }}/actions
        7z x dialogs-${{ matrix.os }}.zip -o${{ matrix.os }}
        7z x media-${{ matrix.os }}.zip -o${{ matrix.os }}
        mv ${{ matrix.SERVER_FILE }} ${{ matrix.os }}
        
    - uses: vimtor/action-zip@v1
      with:
        files: ${{ matrix.os }}
        dest: ${{ matrix.ARTIFACT }}.zip
        
    - name: Upload actions
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.ARTIFACT }}
        path: ${{ matrix.ARTIFACT }}.zip
        
  release_assets:
    name: Release assets
    needs:
    - os_files
    - create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os-ideckia: 
          - ideckia-linux
          - ideckia-win
          - ideckia-macos
    steps:
    
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.os-ideckia }}
      
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        # This is how it will be named on the release page. Put hatever name
        # you like, remember that they need to be different for each platform.
        # You can choose any build matrix parameters. For Rust I use the
        # target triple.
        asset_name: ${{ matrix.os-ideckia }}.zip
        # The path to the file you want to upload.
        asset_path: ${{ matrix.os-ideckia }}.zip
        # probably you will need to change it, but most likely you are
        # uploading a binary file
        asset_content_type: application/zip
